@page "/learnBlazer/demoproduct"

<h2 class="bg-danger text-black">Műveletek</h2>

<div class="border p-1 mt-2 bg-secondary text-center align-items-center">
    <div class="row">
        @foreach(var p in ProductList)
        {
            <div class="bg-light border m-1 col-6">
                <h4 class="text-secondary">Termékek- @p.Id</h4>
                Név: @p.Name
                Tulajdonságog:
                <input type="checkbox" @bind="p.IsActive" />

                @if (p.IsActive)
                {
                    @foreach(var prop in p.Productproperties)
                    {
                        <p>@prop.Key - @prop.Value</p>
                    }
                }
                <br />

                <input type="button"
                      class="btn btn-danger"
                      style="width:100px" value="Törlés"
                       @onclick="() => removeProd(p.Id)" />
            </div>
        }
    </div>

    <div class="row py-4">
        <input type="button"
               class="btn btn-success"
               style="width:70px" value="Számláló" 
               @onclick="() => incrementCount(5)"
               />
        Összeg: @Count
    </div>
</div>



@code {
    public int Count { get; set; } = 0;

    List<Product> ProductList = new();

    protected override void OnInitialized()
    {
        ProductList.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Productproperties = new List<Product_Prop>()
                {
                     new Product_Prop { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Product_Prop { Id = 2, Key = "Size", Value = "20oz"},
                     new Product_Prop { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        ProductList.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Productproperties = new List<Product_Prop>()
            {
                new Product_Prop { Id = 1, Key = "Flavor", Value = "Lily" },
                new Product_Prop { Id = 2, Key = "Size", Value = "18oz" },
                new Product_Prop {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }

    private void incrementCount(int counter)
    {
        Count+=counter;
    }

    private void removeProd(int prodId)
    {
        var prod = ProductList.FirstOrDefault(x => x.Id == prodId);
        if (prod != null)
        {
            ProductList.Remove(prod);
        }
    }

}
